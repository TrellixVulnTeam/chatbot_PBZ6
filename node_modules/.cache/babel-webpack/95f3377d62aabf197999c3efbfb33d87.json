{"ast":null,"code":"import { scan } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../speech-to-text/speech-to-text.component\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"from\": a0,\n    \"to\": a1\n  };\n};\n\nfunction ChatEngComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, message_r1.sentBy === \"bot\", message_r1.sentBy === \"user\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r1.content, \" \");\n  }\n}\n\nexport class ChatEngComponent {\n  // tempSVal!: string;\n  // cht:any;\n  constructor(chat) {\n    this.chat = chat;\n    this.countVal = 0;\n  }\n\n  ngOnInit() {\n    // var val = \"friday\";\n    // var val = {\n    // \"text\": \"friday\"\n    // };\n    // this.chat.talk(val).subscribe(res => console.log(res));\n    // Appends to array after each new message is added to feedSource\n    this.messages = this.chat.conversation.asObservable().pipe(scan((acc, val) => acc.concat(val)));\n  }\n\n  sendMessage() {\n    if (this.countVal == 0) {\n      this.sessionVal = \"\";\n      this.countVal++;\n    }\n\n    ; // this.sessionVal = \"\";\n\n    var cht = {\n      text: this.formValue,\n      session_val: this.sessionVal\n    }; // this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res))\n\n    if (this.countVal == 1) {\n      this.chat.sendMessage(cht).subscribe(res => {\n        console.log('response ====', res);\n        let myObj = JSON.parse(JSON.stringify(res));\n        this.sessionVal = myObj.session;\n        this.countVal++;\n      });\n    }\n\n    this.chat.converse(cht);\n    this.formValue = \"\";\n  }\n\n}\n\nChatEngComponent.ɵfac = function ChatEngComponent_Factory(t) {\n  return new (t || ChatEngComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\n\nChatEngComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatEngComponent,\n  selectors: [[\"app-chat-eng\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"border\", \"border-primary\", 2, \"width\", \"50%\", \"text-align\", \"center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"wrapper\"], [\"id\", \"dialogue\"], [\"onSubmit\", \"return chatbot.sendMessage()\"], [1, \"text-box\"], [\"type\", \"text\", \"name\", \"message\", \"id\", \"message\", \"autocomplete\", \"off\", \"disabled\", \"\", \"placeholder\", \"Please wait... loading...\"], [\"type\", \"submit\", \"value\", \">\", 1, \"send-button\"], [\"for\", \"nameField\"], [\"type\", \"text\", 2, \"width\", \"50%\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"], [1, \"message\", 3, \"ngClass\"]],\n  template: function ChatEngComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Conversation Window\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtemplate(3, ChatEngComponent_ng_container_3_Template, 3, 5, \"ng-container\", 1);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementStart(5, \"body\");\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵelement(7, \"div\", 3);\n      i0.ɵɵelementStart(8, \"form\", 4);\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Type your Message here:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatEngComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.formValue = $event;\n      })(\"keyup.enter\", function ChatEngComponent_Template_input_keyup_enter_15_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ChatEngComponent_Template_button_click_18_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵtext(19, \"Send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelement(22, \"app-speech-to-text\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 2, ctx.messages));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.formValue);\n    }\n  },\n  directives: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.SpeechToTextComponent, i2.NgClass],\n  pipes: [i2.AsyncPipe],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    background: linear-gradient(#A90329, #6d0019);\\r\\n    font-family: Verdana,Arial,Helvetica,sans-serif;\\r\\n    font-size: small;\\r\\n    color: #000000;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    line-height: 1.7em;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: rgba(255,255,255,.5);\\r\\n    padding: 5px;\\r\\n    outline: none;\\r\\n    border: 1px solid rgba(0,0,0,.3);\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .wrapper[_ngcontent-%COMP%] {\\r\\n    max-width: 450px;\\r\\n    height: 100vh;\\r\\n    box-sizing: border-box;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    background-color: rgba(255,255,255,.1);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-left: 1px solid rgba(255,255,255,.2);\\r\\n    border-right: 1px solid rgba(255,255,255,.2);\\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    flex: 5;\\r\\n    display: block;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .text-box[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  input#message[_ngcontent-%COMP%] {\\r\\n    padding-left: 11px;\\r\\n    padding-right: 9px;\\r\\n    font-size: 16px;\\r\\n    height: 27px;\\r\\n    display: block;\\r\\n    flex: 10;\\r\\n    outline: none;\\r\\n    margin: 0 10px 0 0;\\r\\n    box-sizing: border-box;\\r\\n    border: 1px solid #aaa;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  input.send-button[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-color: rgba(255,255,255,.6);\\r\\n    flex: 1;\\r\\n    border: 1px solid rgba(0,0,0,.2);\\r\\n    height: 27px;\\r\\n    box-sizing: border-box;\\r\\n    font-size: 16px;\\r\\n    line-height: 25px;\\r\\n    padding: 0;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  div#dialogue[_ngcontent-%COMP%] {\\r\\n    overflow-x: none;\\r\\n    overflow-y: auto;\\r\\n    display: block;\\r\\n    flex: 95;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .bot-row[_ngcontent-%COMP%], .user-row[_ngcontent-%COMP%] {\\r\\n    padding: 1px 0 10px 0;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .user-row[_ngcontent-%COMP%] {\\r\\n    text-align: right;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%], .bot[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    padding: 5px 8px;\\r\\n    margin: 1px;\\r\\n    border-radius: 12px;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .bot[_ngcontent-%COMP%] {\\r\\n    margin-right: 50px;\\r\\n    background-color: rgba(255,255,255,.85);\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%] {\\r\\n    margin-left: 50px;\\r\\n    color: white;\\r\\n    background-color: #3b3; \\r\\n    border-bottom-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtZW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2Q0FBNkM7SUFDN0MsK0NBQStDO0lBQy9DLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsVUFBVTtJQUNWLFNBQVM7SUFDVCxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxzQ0FBc0M7SUFDdEMsWUFBWTtJQUNaLGFBQWE7SUFDYixnQ0FBZ0M7SUFDaEMsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLFVBQVU7SUFDVixzQ0FBc0M7SUFDdEMsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QiwyQ0FBMkM7SUFDM0MsNENBQTRDO0VBQzlDOztFQUVBO0lBQ0UsT0FBTztJQUNQLGNBQWM7SUFDZCxhQUFhO0VBQ2Y7O0VBQ0E7SUFDRSxlQUFlO0lBQ2YsYUFBYTtJQUNiLFdBQVc7RUFDYjs7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0lBQ2QsUUFBUTtJQUNSLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsc0NBQXNDO0lBQ3RDLE9BQU87SUFDUCxnQ0FBZ0M7SUFDaEMsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLFVBQVU7SUFDVixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxRQUFRO0lBQ1Isc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsY0FBYztJQUNkLGtCQUFrQjtFQUNwQjs7RUFDQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsa0JBQWtCO0VBQ3BCOztFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHVDQUF1QztJQUN2Qyw0QkFBNEI7RUFDOUI7O0VBQ0E7SUFDRSxpQkFBaUI7SUFDakIsWUFBWTtJQUNaLHNCQUFzQjtJQUN0Qiw2QkFBNkI7RUFDL0IiLCJmaWxlIjoiY2hhdC1lbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNBOTAzMjksICM2ZDAwMTkpO1xyXG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsQXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IHNtYWxsO1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuN2VtO1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuNSk7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwuMyk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC53cmFwcGVyIHtcclxuICAgIG1heC13aWR0aDogNDUwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC4xKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC4yKTtcclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsLjIpO1xyXG4gIH1cclxuICBcclxuICBmb3JtIHtcclxuICAgIGZsZXg6IDU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIC50ZXh0LWJveCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIGlucHV0I21lc3NhZ2Uge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogOXB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgaGVpZ2h0OiAyN3B4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmbGV4OiAxMDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDAgMTBweCAwIDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FhYTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEzcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0LnNlbmQtYnV0dG9uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuNik7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwuMik7XHJcbiAgICBoZWlnaHQ6IDI3cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI1cHg7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTNweDtcclxuICB9XHJcbiAgXHJcbiAgZGl2I2RpYWxvZ3VlIHtcclxuICAgIG92ZXJmbG93LXg6IG5vbmU7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmbGV4OiA5NTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5ib3Qtcm93LCAudXNlci1yb3cge1xyXG4gICAgcGFkZGluZzogMXB4IDAgMTBweCAwO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIC51c2VyLXJvdyB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB9XHJcbiAgXHJcbiAgLnVzZXIsIC5ib3Qge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgcGFkZGluZzogNXB4IDhweDtcclxuICAgIG1hcmdpbjogMXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcbiAgLmJvdCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC44NSk7XHJcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xyXG4gIH1cclxuICAudXNlciB7XHJcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjM7IFxyXG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XHJcbiAgfSJdfQ== */\"]\n});","map":{"version":3,"sources":["D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.ts","D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChatService, Message } from 'src/app/chat.service';\nimport { Observable } from 'rxjs';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-chat-eng',\n  templateUrl: './chat-eng.component.html',\n  styleUrls: ['./chat-eng.component.css']\n})\nexport class ChatEngComponent implements OnInit {\n\n  messages!: Observable<Message[]>;\n  formValue!: any;\n  sessionVal!: string;\n  countVal = 0;\n  // tempSVal!: string;\n  // cht:any;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n      // var val = \"friday\";\n\n      // var val = {\n        // \"text\": \"friday\"\n      // };\n      // this.chat.talk(val).subscribe(res => console.log(res));\n\n\n      // Appends to array after each new message is added to feedSource\n      this.messages = this.chat.conversation.asObservable()\n      .pipe(scan((acc, val) => acc.concat(val)));\n\n  }\n  \n  sendMessage() {\n    if (this.countVal == 0) {\n      this.sessionVal = \"\";\n      this.countVal++;\n    };\n\n    // this.sessionVal = \"\";\n    var cht = {text: this.formValue,\n              session_val: this.sessionVal};\n    // this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res))\n    if (this.countVal == 1) {\n      this.chat.sendMessage(cht).subscribe(res => { console.log('response ====', res);\n      let myObj = JSON.parse(JSON.stringify(res));\n\n      this.sessionVal = myObj.session;\n      this.countVal++;\n      \n      }); \n    } \n    this.chat.converse(cht);\n    \n    this.formValue = \"\";\n\n  }\n\n}\n\n\n// sendMessage() {\n//   this.chat.converse(this.formValue);\n\n//   this.formValue = \"\";\n// }","<h3>Conversation Window</h3>\n\n<div class=\"border border-primary\" style=\"width: 50%; text-align: center;\">\n<ng-container *ngFor=\"let message of messages | async\" >\n\n    <div class=\"message\" [ngClass]=\"{ 'from': message.sentBy === 'bot',\n                                        'to': message.sentBy === 'user' }\">\n        {{ message.content }}\n        \n    </div>\n\n</ng-container>\n\n<body>\n    \n\n<div class='wrapper'>\n    <div id=\"dialogue\"></div>\n    <form onSubmit=\"return chatbot.sendMessage()\">\n      <div class=\"text-box\">\n        <input type=\"text\" name=\"message\" id=\"message\" autocomplete=\"off\" disabled placeholder=\"Please wait... loading...\">\n        <input class=\"send-button\" type=\"submit\" value=\">\">\n      </div>\n    </form>\n  </div>\n</body>\n\n\n\n\n</div>\n\n<label for=\"nameField\">Type your Message here:</label><br>\n\n<input style=\"width: 50%;\" [(ngModel)]=\"formValue\" (keyup.enter)=\"sendMessage()\" type=\"text\"><br><br>\n\n<button (click)=\"sendMessage()\">Send</button><br><br>\n\n<app-speech-to-text></app-speech-to-text>  \n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}