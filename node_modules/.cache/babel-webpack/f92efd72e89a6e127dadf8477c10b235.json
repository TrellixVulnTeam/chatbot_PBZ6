{"ast":null,"code":"import { scan } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../speech-to-text/speech-to-text.component\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"from\": a0,\n    \"to\": a1\n  };\n};\n\nfunction ChatEngComponent_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, message_r1.sentBy === \"bot\", message_r1.sentBy === \"user\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r1.content);\n  }\n}\n\nfunction ChatEngComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 5);\n    i0.ɵɵtemplate(1, ChatEngComponent_ng_container_3_div_1_Template, 3, 5, \"div\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user);\n  }\n}\n\nexport class ChatEngComponent {\n  // tempSVal!: string;\n  // cht:any;\n  constructor(chat) {\n    this.chat = chat;\n    this.user = true;\n    this.countVal = 0;\n  }\n\n  ngOnInit() {\n    // var val = \"friday\";\n    // var val = {\n    // \"text\": \"friday\"\n    // };\n    // this.chat.talk(val).subscribe(res => console.log(res));\n    // Appends to array after each new message is added to feedSource\n    this.messages = this.chat.conversation.asObservable().pipe(scan((acc, val) => acc.concat(val)));\n  }\n\n  sendMessage() {\n    if (this.countVal == 0) {\n      this.sessionVal = \"\";\n      this.countVal++;\n    }\n\n    ; // this.sessionVal = \"\";\n\n    var cht = {\n      text: this.formValue,\n      session_val: this.sessionVal\n    }; // this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res))\n\n    if (this.countVal == 1) {\n      this.chat.sendMessage(cht).subscribe(res => {\n        console.log('response ====', res);\n        let myObj = JSON.parse(JSON.stringify(res));\n        this.sessionVal = myObj.session;\n        this.countVal++;\n      });\n    }\n\n    this.chat.converse(cht);\n    this.formValue = \"\";\n  }\n\n}\n\nChatEngComponent.ɵfac = function ChatEngComponent_Factory(t) {\n  return new (t || ChatEngComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\n\nChatEngComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatEngComponent,\n  selectors: [[\"app-chat-eng\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[1, \"justify-content-center\", 2, \"width\", \"50%\", \"margin-left\", \"340px\", \"border-style\", \"groove\", \"padding-top\", \"50px\", \"background-color\", \"turquoise\"], [\"style\", \"padding-top: 10px; padding-bottom: 20px;\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"message\", \"placeholder\", \"Type your message here....\", \"id\", \"message\", \"type\", \"text\", 2, \"margin-left\", \"15px\", \"padding-left\", \"15px\", \"width\", \"85%\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"btn\", \"btn-outline-primary\", 2, \"width\", \"10%\", \"border-radius\", \"5px\", \"margin-right\", \"15px\", \"float\", \"right\", \"border-radius\", \"10px\", \"margin-top\", \"-30px\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paper-plane\"], [2, \"padding-top\", \"10px\", \"padding-bottom\", \"20px\"], [\"style\", \"border-style: groove; float: right; margin-right: 100px; padding: 10px 15px; border-radius: 20px;\\n                background-color: aqua;\", 3, \"ngClass\", 4, \"ngIf\"], [2, \"border-style\", \"groove\", \"float\", \"right\", \"margin-right\", \"100px\", \"padding\", \"10px 15px\", \"border-radius\", \"20px\", \"background-color\", \"aqua\", 3, \"ngClass\"], [2, \"padding-top\", \"10px\"]],\n  template: function ChatEngComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Conversation Window\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtemplate(3, ChatEngComponent_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatEngComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.formValue = $event;\n      })(\"keyup.enter\", function ChatEngComponent_Template_input_keyup_enter_5_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ChatEngComponent_Template_button_click_6_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelement(7, \"i\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"app-speech-to-text\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 2, ctx.messages));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.formValue);\n    }\n  },\n  directives: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.SpeechToTextComponent, i2.NgIf, i2.NgClass],\n  pipes: [i2.AsyncPipe],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    align-content: center;\\r\\n    background: linear-gradient(rgb(3, 169, 169), #10cdee);\\r\\n    font-family: Verdana,Arial,Helvetica,sans-serif;\\r\\n    font-size: small;\\r\\n    color: #000000;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    line-height: 1.7em;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: rgba(255,255,255,.5);\\r\\n    padding: 5px;\\r\\n    outline: none;\\r\\n    border: 1px solid rgba(0,0,0,.3);\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .wrapper[_ngcontent-%COMP%] {\\r\\n    max-width: 450px;\\r\\n    height: 100vh;\\r\\n    box-sizing: border-box;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    background-color: rgba(255,255,255,.1);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-left: 1px solid rgba(255,255,255,.2);\\r\\n    border-right: 1px solid rgba(255,255,255,.2);\\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    flex: 5;\\r\\n    display: block;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .text-box[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  input#message[_ngcontent-%COMP%] {\\r\\n    padding-left: 11px;\\r\\n    padding-right: 9px;\\r\\n    font-size: 16px;\\r\\n    height: 27px;\\r\\n    display: block;\\r\\n    flex: 10;\\r\\n    outline: none;\\r\\n    margin: 0 10px 0 0;\\r\\n    box-sizing: border-box;\\r\\n    border: 1px solid #aaa;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  input.send-button[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-color: rgba(255,255,255,.6);\\r\\n    flex: 1;\\r\\n    border: 1px solid rgba(0,0,0,.2);\\r\\n    height: 27px;\\r\\n    box-sizing: border-box;\\r\\n    font-size: 16px;\\r\\n    line-height: 25px;\\r\\n    padding: 0;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  div#dialogue[_ngcontent-%COMP%] {\\r\\n    overflow-x: none;\\r\\n    overflow-y: auto;\\r\\n    display: block;\\r\\n    flex: 95;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .bot-row[_ngcontent-%COMP%], .user-row[_ngcontent-%COMP%] {\\r\\n    padding: 1px 0 10px 0;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .user-row[_ngcontent-%COMP%] {\\r\\n    text-align: right;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%], .bot[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    padding: 5px 8px;\\r\\n    margin: 1px;\\r\\n    border-radius: 12px;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .bot[_ngcontent-%COMP%] {\\r\\n    margin-right: 50px;\\r\\n    background-color: rgba(255,255,255,.85);\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%] {\\r\\n    margin-left: 50px;\\r\\n    color: white;\\r\\n    background-color: #3b3; \\r\\n    border-bottom-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtZW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsc0RBQXNEO0lBQ3RELCtDQUErQztJQUMvQyxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFVBQVU7SUFDVixTQUFTO0lBQ1Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usc0NBQXNDO0lBQ3RDLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0NBQWdDO0lBQ2hDLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixVQUFVO0lBQ1Ysc0NBQXNDO0lBQ3RDLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsMkNBQTJDO0lBQzNDLDRDQUE0QztFQUM5Qzs7RUFFQTtJQUNFLE9BQU87SUFDUCxjQUFjO0lBQ2QsYUFBYTtFQUNmOztFQUNBO0lBQ0UsZUFBZTtJQUNmLGFBQWE7SUFDYixXQUFXO0VBQ2I7O0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1osY0FBYztJQUNkLFFBQVE7SUFDUixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsY0FBYztJQUNkLHNDQUFzQztJQUN0QyxPQUFPO0lBQ1AsZ0NBQWdDO0lBQ2hDLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsUUFBUTtJQUNSLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsYUFBYTtFQUNmOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGtCQUFrQjtFQUNwQjs7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQix1Q0FBdUM7SUFDdkMsNEJBQTRCO0VBQzlCOztFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsNkJBQTZCO0VBQy9CIiwiZmlsZSI6ImNoYXQtZW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChyZ2IoMywgMTY5LCAxNjkpLCAjMTBjZGVlKTtcclxuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLEFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjdlbTtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjUpO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjMpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICAud3JhcHBlciB7XHJcbiAgICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuMSk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwuMik7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC4yKTtcclxuICB9XHJcbiAgXHJcbiAgZm9ybSB7XHJcbiAgICBmbGV4OiA1O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICAudGV4dC1ib3gge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBpbnB1dCNtZXNzYWdlIHtcclxuICAgIHBhZGRpbmctbGVmdDogMTFweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDlweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGhlaWdodDogMjdweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxleDogMTA7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgbWFyZ2luOiAwIDEwcHggMCAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNhYWE7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxM3B4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dC5zZW5kLWJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjYpO1xyXG4gICAgZmxleDogMTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO1xyXG4gICAgaGVpZ2h0OiAyN3B4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEzcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGRpdiNkaWFsb2d1ZSB7XHJcbiAgICBvdmVyZmxvdy14OiBub25lO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxleDogOTU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAuYm90LXJvdywgLnVzZXItcm93IHtcclxuICAgIHBhZGRpbmc6IDFweCAwIDEwcHggMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuICAudXNlci1yb3cge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG4gIFxyXG4gIC51c2VyLCAuYm90IHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHBhZGRpbmc6IDVweCA4cHg7XHJcbiAgICBtYXJnaW46IDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIC5ib3Qge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuODUpO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICB9XHJcbiAgLnVzZXIge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2IzOyBcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"sources":["D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.ts","D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChatService, Message } from 'src/app/chat.service';\nimport { Observable } from 'rxjs';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-chat-eng',\n  templateUrl: './chat-eng.component.html',\n  styleUrls: ['./chat-eng.component.css']\n})\nexport class ChatEngComponent implements OnInit {\n\n  user= true;\n  messages!: Observable<Message[]>;\n  formValue!: any;\n  sessionVal!: string;\n  countVal = 0;\n  // tempSVal!: string;\n  // cht:any;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n      // var val = \"friday\";\n\n      // var val = {\n        // \"text\": \"friday\"\n      // };\n      // this.chat.talk(val).subscribe(res => console.log(res));\n\n\n      // Appends to array after each new message is added to feedSource\n      this.messages = this.chat.conversation.asObservable()\n      .pipe(scan((acc, val) => acc.concat(val)));\n\n  }\n  \n  sendMessage() {\n    if (this.countVal == 0) {\n      this.sessionVal = \"\";\n      this.countVal++;\n    };\n\n    // this.sessionVal = \"\";\n    var cht = {text: this.formValue,\n              session_val: this.sessionVal};\n    // this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res))\n    if (this.countVal == 1) {\n      this.chat.sendMessage(cht).subscribe(res => { console.log('response ====', res);\n      let myObj = JSON.parse(JSON.stringify(res));\n\n      this.sessionVal = myObj.session;\n      this.countVal++;\n      \n      }); \n    } \n    this.chat.converse(cht);\n    \n    this.formValue = \"\";\n\n  }\n\n}\n\n\n// sendMessage() {\n//   this.chat.converse(this.formValue);\n\n//   this.formValue = \"\";\n// }","<h3>Conversation Window</h3>\n\n\n<div class=\"justify-content-center\" \nstyle=\"width: 50%; margin-left: 340px; border-style: groove; padding-top: 50px; background-color: turquoise;\">\n<ng-container style=\"padding-top: 10px; padding-bottom: 20px;\" *ngFor=\"let message of messages | async\" >\n\n    <div *ngIf=user style=\"border-style: groove; float: right; margin-right: 100px; padding: 10px 15px; border-radius: 20px;\n                background-color: aqua;\" \n    [ngClass]=\"{ 'from': message.sentBy === 'bot', 'to': message.sentBy === 'user' }\">\n        <div style=\"padding-top: 10px;\">{{ message.content }}</div>\n        \n    </div>\n\n</ng-container>\n\n\n<input name=\"message\" placeholder=\"Type your message here....\" id=\"message\" style=\"margin-left: 15px; padding-left: 15px; width: 85%;\" [(ngModel)]=\"formValue\" (keyup.enter)=\"sendMessage()\" type=\"text\">\n\n<button class=\"btn btn-outline-primary\" \nstyle=\"width: 10%; border-radius: 5px; margin-right: 15px; float:right; border-radius: 10px; margin-top: -30px;\" \n(click)=\"sendMessage()\">\n    <i class=\"fa fa-paper-plane \" aria-hidden=\"true\"></i>\n</button><br><br>\n\n</div>\n\n<app-speech-to-text></app-speech-to-text>  \n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}