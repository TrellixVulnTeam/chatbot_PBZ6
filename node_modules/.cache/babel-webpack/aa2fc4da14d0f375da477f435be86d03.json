{"ast":null,"code":"import { scan } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"scrollMe\"];\n\nfunction ChatEngComponent_ng_container_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"h6\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.content);\n  }\n}\n\nfunction ChatEngComponent_ng_container_7_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"h6\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.content);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"from\": a0,\n    \"to\": a1\n  };\n};\n\nfunction ChatEngComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtemplate(3, ChatEngComponent_ng_container_7_div_3_Template, 3, 1, \"div\", 11);\n    i0.ɵɵtemplate(4, ChatEngComponent_ng_container_7_div_4_Template, 3, 1, \"div\", 12);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, message_r2.sentBy === \"bot\", message_r2.sentBy === \"user\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r2.sentBy === \"user\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r2.sentBy === \"bot\");\n  }\n}\n\nexport class ChatEngComponent {\n  constructor(chat) {\n    this.chat = chat;\n    this.countVal = 0;\n  }\n\n  ngOnInit() {\n    this.scrollToBottom(); // Append to an array after each new message is added to feedSource\n\n    this.messages = this.chat.conversation.asObservable().pipe(scan((acc, val) => acc.concat(val)));\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    try {\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n\n  sendMessage() {\n    // this.chat.converse(this.formValue);\n    // console.log('formVal ===', this.formValue);\n    if (this.countVal == 0) {\n      this.sessionVal = \"\";\n      this.countVal++;\n    }\n\n    ;\n    var cht = {\n      text: this.formValue,\n      session_val: this.sessionVal\n    };\n    this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res));\n\n    if (this.countVal == 1) {\n      this.chat.sendMessage(cht).subscribe(res => {\n        console.log('response ====', res);\n        let myObj = JSON.parse(JSON.stringify(res));\n        this.sessionVal = myObj.session;\n        this.countVal++;\n      });\n    }\n\n    this.chat.converse(cht);\n    this.formValue = \"\";\n  }\n\n}\n\nChatEngComponent.ɵfac = function ChatEngComponent_Factory(t) {\n  return new (t || ChatEngComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\n\nChatEngComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatEngComponent,\n  selectors: [[\"app-chat-eng\"]],\n  viewQuery: function ChatEngComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myScrollContainer = _t.first);\n    }\n  },\n  decls: 15,\n  vars: 4,\n  consts: [[2, \"width\", \"100%\", \"float\", \"right\"], [2, \"text-align\", \"center\", \"color\", \"azure\"], [1, \"justify-content-center\", 2, \"overflow-anchor\", \"none\", \"border-radius\", \"20px\", \"width\", \"100%\", \"padding-top\", \"20px\", \"float\", \"right\", \"border-style\", \"groove\", \"background-color\", \"turquoise\"], [2, \"overflow\", \"auto\", \"height\", \"435px\"], [\"scrollMe\", \"\"], [4, \"ngFor\", \"ngForOf\"], [2, \"width\", \"100%\", \"padding-bottom\", \"10px\"], [\"name\", \"message\", \"placeholder\", \"Type your message here....\", \"id\", \"message\", \"type\", \"text\", 2, \"margin-left\", \"10px\", \"padding-left\", \"15px\", \"display\", \"inline-block\", \"width\", \"85%\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"btn\", \"btn-outline-primary\", 2, \"display\", \"inline-block\", \"width\", \"12%\", \"border-radius\", \"5px\", \"border-radius\", \"10px\", \"float\", \"right\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paper-plane\"], [3, \"ngClass\"], [\"style\", \"max-width: 70%; border-style: groove; float: right; \\n                margin-right: 30px; padding: 10px 15px; border-radius: 20px; background-color: aqua;\", 4, \"ngIf\"], [\"style\", \"max-width: 70%; border-style: groove; float: left; \\n                margin-left: 30px; padding: 10px 15px; border-radius: 20px; background-color:deepskyblue\", 4, \"ngIf\"], [2, \"max-width\", \"70%\", \"border-style\", \"groove\", \"float\", \"right\", \"margin-right\", \"30px\", \"padding\", \"10px 15px\", \"border-radius\", \"20px\", \"background-color\", \"aqua\"], [2, \"max-width\", \"70%\", \"border-style\", \"groove\", \"float\", \"left\", \"margin-left\", \"30px\", \"padding\", \"10px 15px\", \"border-radius\", \"20px\", \"background-color\", \"deepskyblue\"]],\n  template: function ChatEngComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵelementStart(2, \"h3\", 1);\n      i0.ɵɵtext(3, \"Conversation Window\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 3, 4);\n      i0.ɵɵtemplate(7, ChatEngComponent_ng_container_7_Template, 7, 6, \"ng-container\", 5);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatEngComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.formValue = $event;\n      })(\"keyup.enter\", function ChatEngComponent_Template_input_keyup_enter_12_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ChatEngComponent_Template_button_click_13_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelement(14, \"i\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 2, ctx.messages));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.formValue);\n    }\n  },\n  directives: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.NgClass, i2.NgIf],\n  pipes: [i2.AsyncPipe],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    align-content: center;\\r\\n    background: linear-gradient(rgb(3, 169, 169), #10cdee);\\r\\n    font-family: Verdana,Arial,Helvetica,sans-serif;\\r\\n    font-size: small;\\r\\n    color: #000000;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    line-height: 1.7em;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: rgba(255,255,255,.5);\\r\\n    padding: 5px;\\r\\n    outline: none;\\r\\n    border: 1px solid rgba(0,0,0,.3);\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .wrapper[_ngcontent-%COMP%] {\\r\\n    max-width: 450px;\\r\\n    height: 100vh;\\r\\n    box-sizing: border-box;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    background-color: rgba(255,255,255,.1);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-left: 1px solid rgba(255,255,255,.2);\\r\\n    border-right: 1px solid rgba(255,255,255,.2);\\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    flex: 5;\\r\\n    display: block;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .text-box[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  input#message[_ngcontent-%COMP%] {\\r\\n    padding-left: 11px;\\r\\n    padding-right: 9px;\\r\\n    font-size: 16px;\\r\\n    height: 27px;\\r\\n    display: block;\\r\\n    flex: 10;\\r\\n    outline: none;\\r\\n    margin: 0 10px 0 0;\\r\\n    box-sizing: border-box;\\r\\n    border: 1px solid #aaa;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  input.send-button[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-color: rgba(255,255,255,.6);\\r\\n    flex: 1;\\r\\n    border: 1px solid rgba(0,0,0,.2);\\r\\n    height: 27px;\\r\\n    box-sizing: border-box;\\r\\n    font-size: 16px;\\r\\n    line-height: 25px;\\r\\n    padding: 0;\\r\\n    border-radius: 13px;\\r\\n  }\\r\\n  \\r\\n  div#dialogue[_ngcontent-%COMP%] {\\r\\n    overflow-x: none;\\r\\n    overflow-y: auto;\\r\\n    display: block;\\r\\n    flex: 95;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .bot-row[_ngcontent-%COMP%], .user-row[_ngcontent-%COMP%] {\\r\\n    padding: 1px 0 10px 0;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .user-row[_ngcontent-%COMP%] {\\r\\n    text-align: right;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%], .bot[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    padding: 5px 8px;\\r\\n    margin: 1px;\\r\\n    border-radius: 12px;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n  }\\r\\n  \\r\\n  .bot[_ngcontent-%COMP%] {\\r\\n    margin-right: 50px;\\r\\n    background-color: rgba(255,255,255,.85);\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\\r\\n  \\r\\n  .user[_ngcontent-%COMP%] {\\r\\n    margin-left: 50px;\\r\\n    color: white;\\r\\n    background-color: #3b3; \\r\\n    border-bottom-right-radius: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtZW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsc0RBQXNEO0lBQ3RELCtDQUErQztJQUMvQyxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFVBQVU7SUFDVixTQUFTO0lBQ1Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usc0NBQXNDO0lBQ3RDLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0NBQWdDO0lBQ2hDLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixVQUFVO0lBQ1Ysc0NBQXNDO0lBQ3RDLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsMkNBQTJDO0lBQzNDLDRDQUE0QztFQUM5Qzs7RUFFQTtJQUNFLE9BQU87SUFDUCxjQUFjO0lBQ2QsYUFBYTtFQUNmOztFQUNBO0lBQ0UsZUFBZTtJQUNmLGFBQWE7SUFDYixXQUFXO0VBQ2I7O0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1osY0FBYztJQUNkLFFBQVE7SUFDUixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsY0FBYztJQUNkLHNDQUFzQztJQUN0QyxPQUFPO0lBQ1AsZ0NBQWdDO0lBQ2hDLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsUUFBUTtJQUNSLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsYUFBYTtFQUNmOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGtCQUFrQjtFQUNwQjs7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQix1Q0FBdUM7SUFDdkMsNEJBQTRCO0VBQzlCOztFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsNkJBQTZCO0VBQy9CIiwiZmlsZSI6ImNoYXQtZW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChyZ2IoMywgMTY5LCAxNjkpLCAjMTBjZGVlKTtcclxuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLEFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjdlbTtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjUpO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjMpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICAud3JhcHBlciB7XHJcbiAgICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuMSk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwuMik7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC4yKTtcclxuICB9XHJcbiAgXHJcbiAgZm9ybSB7XHJcbiAgICBmbGV4OiA1O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICAudGV4dC1ib3gge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBpbnB1dCNtZXNzYWdlIHtcclxuICAgIHBhZGRpbmctbGVmdDogMTFweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDlweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGhlaWdodDogMjdweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxleDogMTA7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgbWFyZ2luOiAwIDEwcHggMCAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNhYWE7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxM3B4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dC5zZW5kLWJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjYpO1xyXG4gICAgZmxleDogMTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO1xyXG4gICAgaGVpZ2h0OiAyN3B4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEzcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGRpdiNkaWFsb2d1ZSB7XHJcbiAgICBvdmVyZmxvdy14OiBub25lO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxleDogOTU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAuYm90LXJvdywgLnVzZXItcm93IHtcclxuICAgIHBhZGRpbmc6IDFweCAwIDEwcHggMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuICAudXNlci1yb3cge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG4gIFxyXG4gIC51c2VyLCAuYm90IHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHBhZGRpbmc6IDVweCA4cHg7XHJcbiAgICBtYXJnaW46IDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIC5ib3Qge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuODUpO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICB9XHJcbiAgLnVzZXIge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2IzOyBcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"sources":["D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.ts","D:\\Haji_bhai\\Angular\\testCB\\src\\app\\chat-eng\\chat-eng.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewChecked, ElementRef, ViewChild, } from '@angular/core';\r\nimport { ChatService, Message } from 'src/app/chat.service';\r\nimport { Observable } from 'rxjs';\r\nimport { scan } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-chat-eng',\r\n  templateUrl: './chat-eng.component.html',\r\n  styleUrls: ['./chat-eng.component.css']\r\n})\r\nexport class ChatEngComponent implements OnInit, AfterViewChecked {\r\n    @ViewChild('scrollMe') private myScrollContainer!: ElementRef;\r\n\r\n    messages!: Observable<Message[]>;\r\n    formValue!: string;\r\n    sessionVal!: string;\r\n    countVal = 0;\r\n\r\n  constructor(public chat: ChatService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n      this.scrollToBottom();\r\n\r\n      // Append to an array after each new message is added to feedSource\r\n      this.messages = this.chat.conversation.asObservable()\r\n      .pipe(scan((acc, val: any) => acc.concat(val)));\r\n  }\r\n\r\n  ngAfterViewChecked() {        \r\n    this.scrollToBottom();        \r\n  } \r\n  \r\n  scrollToBottom(): void {\r\n    try {\r\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch(err) { }                 \r\n  }\r\n\r\n  sendMessage() {\r\n\r\n    // this.chat.converse(this.formValue);\r\n    // console.log('formVal ===', this.formValue);\r\n\r\n    if (this.countVal == 0) {\r\n      this.sessionVal = \"\";\r\n      this.countVal++;\r\n    };\r\n\r\n    var cht = {text: this.formValue,\r\n      session_val: this.sessionVal};\r\n\r\n    this.chat.sendMessage(cht).subscribe(res => console.log('entered value ==', res))\r\n    \r\n    if (this.countVal == 1) {\r\n      this.chat.sendMessage(cht).subscribe(res => { console.log('response ====', res);\r\n      let myObj = JSON.parse(JSON.stringify(res));\r\n\r\n      this.sessionVal = myObj.session;\r\n      this.countVal++;\r\n      \r\n      }); \r\n    }\r\n    \r\n    this.chat.converse(cht);\r\n    this.formValue = \"\";\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; float: right;\" >\n    <div>\n        <h3 style=\"text-align: center; color: azure;\">Conversation Window</h3>\n    </div>\n\n    <div class=\"justify-content-center\"\n    style=\"overflow-anchor: none; border-radius: 20px; width: 100%; padding-top: 20px;\n    float:right; border-style: groove; background-color: turquoise;\">\n\n    <div #scrollMe style=\"overflow: auto; height: 435px;\">\n    <ng-container *ngFor=\"let message of messages | async\" >\n\n        <div [ngClass]=\"{ 'from': message.sentBy === 'bot','to': message.sentBy === 'user' }\">\n            <br>\n            <div *ngIf=\"message.sentBy === 'user'\" style=\"max-width: 70%; border-style: groove; float: right; \n                margin-right: 30px; padding: 10px 15px; border-radius: 20px; background-color: aqua;\">\n                <h6>{{ message.content }}</h6>\n            </div>\n\n            <div *ngIf=\"message.sentBy === 'bot'\" style=\"max-width: 70%; border-style: groove; float: left; \n                margin-left: 30px; padding: 10px 15px; border-radius: 20px; background-color:deepskyblue\">\n                <h6>{{ message.content }}</h6>\n            </div>\n            <br><br>\n        </div>\n\n    </ng-container>\n    </div>\n\n    <br><br>\n\n    <div style=\"width: 100%; padding-bottom: 10px;\">\n        <input name=\"message\" placeholder=\"Type your message here....\" id=\"message\" \n        style=\"margin-left: 10px; padding-left: 15px; display:inline-block; width:85%;\"\n        [(ngModel)]=\"formValue\" (keyup.enter)=\"sendMessage()\" type=\"text\">\n\n        <button class=\"btn btn-outline-primary\" \n        style=\"display:inline-block; width:12%; border-radius: 5px; \n        border-radius: 10px; float: right;\" \n        (click)=\"sendMessage()\">\n            <i class=\"fa fa-paper-plane \" aria-hidden=\"true\"></i>\n        </button>\n    </div>\n\n</div>\n\n\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}